# -*- coding: utf-8 -*-
"""MovieRecommandation.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/13begemxhm_43lDmwhO3GZRklbqglgLzJ
"""

import numpy as np
import pandas as pd
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.metrics.pairwise import cosine_similarity

movies = pd.DataFrame({
    'title': [
        'Iron Man', 'The Avengers', 'Avengers: Endgame', 'Batman Begins',
        'The Dark Knight', 'The Matrix', 'Inception', 'Toy Story', 'Finding Nemo', 'Shrek'
    ],
    'genres': [
        'Action, Adventure, Sci-Fi', 'Action, Adventure, Sci-Fi', 'Action, Adventure, Sci-Fi',
        'Action, Crime, Drama', 'Action, Crime, Drama', 'Action, Sci-Fi', 'Action, Adventure, Sci-Fi',
        'Animation, Adventure, Comedy', 'Animation, Adventure, Comedy', 'Animation, Comedy, Fantasy'
    ]
})

tfidf = TfidfVectorizer(stop_words='english')
tfidf_matrix = tfidf.fit_transform(movies['genres'])

cosine_sim = cosine_similarity(tfidf_matrix,tfidf_matrix)

def recommand(gener,cosine_sim=cosine_sim):
  gener_matrix = tfidf.transform([gener])
  gener_sim_score = cosine_similarity(gener_matrix,tfidf_matrix).flatten()
  gener_sim_score = gener_sim_score.argsort()[::-1]
  return movies['title'].iloc[gener_sim_score[:5]]

# Get recommendations by genre
recommended_movies = get_recommendations_by_genre("Action, Adventure")
print("Recommended Movies:")
print(recommended_movies)